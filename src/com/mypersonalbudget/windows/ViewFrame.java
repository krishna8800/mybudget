/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mypersonalbudget.windows;
import com.bean.AddEntry;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import org.hibernate.Query;
import org.hibernate.Session;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manjula
 */
public class ViewFrame extends javax.swing.JFrame {

    /**
     * Creates new form ViewFrame
     */
    public ViewFrame() {
        initComponents();
        dateText.hide();
        monthNo.hide();
        date1.hide();
        date2.hide();
        andLable.hide();
        searchDate.hide();
        searchBetweenDates.hide();
        searchMonth.hide();
        jLabel1.hide();
        jLabel2.hide();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        headImage = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        searchKey = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        viewByDate = new javax.swing.JRadioButton();
        viewByMonth = new javax.swing.JRadioButton();
        viewBetween = new javax.swing.JRadioButton();
        dateText = new javax.swing.JTextField();
        monthNo = new javax.swing.JComboBox();
        date1 = new javax.swing.JTextField();
        andLable = new javax.swing.JLabel();
        date2 = new javax.swing.JTextField();
        searchDate = new javax.swing.JButton();
        searchMonth = new javax.swing.JButton();
        searchBetweenDates = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        sumOfResult = new javax.swing.JLabel();
        Label_View_Head = new javax.swing.JLabel();
        newEntryHeader = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        newEntry = new javax.swing.JMenuItem();
        home = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        editEntry = new javax.swing.JMenuItem();
        View = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 153, 204));
        jPanel1.setLayout(null);

        headImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/head1 (2).jpg"))); // NOI18N
        headImage.setMaximumSize(new java.awt.Dimension(1100, 120));
        headImage.setPreferredSize(new java.awt.Dimension(1100, 120));
        jPanel1.add(headImage);
        headImage.setBounds(0, 0, 1150, 120);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(240, 240, 240));
        jTable1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Baskerville Old Face", 0, 16)); // NOI18N
        jTable1.setForeground(new java.awt.Color(204, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Item Name", "Cost", "Money Spend By", "Date", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 153, 51));
        jTable1.setRequestFocusEnabled(false);
        jTable1.setRowHeight(24);
        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 153));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 153));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 210, 795, 402);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        jPanel1.add(refreshButton);
        refreshButton.setBounds(630, 140, 90, 30);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton);
        deleteButton.setBounds(740, 140, 90, 30);
        jPanel1.add(searchKey);
        searchKey.setBounds(10, 140, 170, 30);

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SearchButton);
        SearchButton.setBounds(200, 140, 80, 30);

        viewButtonGroup.add(viewByDate);
        viewByDate.setText("View By Date");
        viewByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewByDateActionPerformed(evt);
            }
        });
        jPanel1.add(viewByDate);
        viewByDate.setBounds(830, 210, 100, 23);

        viewButtonGroup.add(viewByMonth);
        viewByMonth.setText("By Month");
        viewByMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewByMonthActionPerformed(evt);
            }
        });
        jPanel1.add(viewByMonth);
        viewByMonth.setBounds(940, 210, 90, 23);

        viewButtonGroup.add(viewBetween);
        viewBetween.setText("B/W Dates");
        viewBetween.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBetweenActionPerformed(evt);
            }
        });
        jPanel1.add(viewBetween);
        viewBetween.setBounds(1050, 210, 90, 23);

        dateText.setText("yyyy-m-dd");
        jPanel1.add(dateText);
        dateText.setBounds(830, 250, 89, 30);

        monthNo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jPanel1.add(monthNo);
        monthNo.setBounds(940, 250, 95, 30);

        date1.setText("yyyy-m-dd");
        jPanel1.add(date1);
        date1.setBounds(1050, 250, 80, 30);

        andLable.setText("And");
        jPanel1.add(andLable);
        andLable.setBounds(1070, 280, 19, 14);

        date2.setText("yyyy-m-dd");
        jPanel1.add(date2);
        date2.setBounds(1050, 300, 80, 30);

        searchDate.setText("Search");
        searchDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDateActionPerformed(evt);
            }
        });
        jPanel1.add(searchDate);
        searchDate.setBounds(830, 300, 80, 30);

        searchMonth.setText("Search");
        searchMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMonthActionPerformed(evt);
            }
        });
        jPanel1.add(searchMonth);
        searchMonth.setBounds(940, 300, 80, 30);

        searchBetweenDates.setText("Search");
        searchBetweenDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBetweenDatesActionPerformed(evt);
            }
        });
        jPanel1.add(searchBetweenDates);
        searchBetweenDates.setBounds(1050, 340, 80, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Selected Item Id");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(830, 420, 116, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 153));
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(960, 420, 66, 20);

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("This Month Total  :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(290, 140, 168, 25);

        sumOfResult.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        sumOfResult.setForeground(new java.awt.Color(204, 0, 0));
        sumOfResult.setText("   ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(sumOfResult)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sumOfResult, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(480, 140, 106, 22);

        Label_View_Head.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Label_View_Head.setForeground(new java.awt.Color(255, 0, 0));
        Label_View_Head.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_View_Head.setText("Search Page ");
        jPanel1.add(Label_View_Head);
        Label_View_Head.setBounds(14, 170, 790, 30);

        newEntryHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        newEntryHeader.setForeground(new java.awt.Color(255, 255, 0));
        newEntryHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newEntryHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/light-blue-wallpaper-5.jpg"))); // NOI18N
        jPanel1.add(newEntryHeader);
        newEntryHeader.setBounds(0, 122, 1150, 500);

        jMenuBar1.setBackground(new java.awt.Color(-14336,true));
        jMenuBar1.setAutoscrolls(true);
        jMenuBar1.setFont(new java.awt.Font("Dialog", 1, 18));

        File.setText("File");
        File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileActionPerformed(evt);
            }
        });

        newEntry.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newEntry.setText("New Entry");
        newEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEntryActionPerformed(evt);
            }
        });
        File.add(newEntry);

        home.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        File.add(home);

        jMenuBar1.add(File);

        Edit.setText("Edit");

        editEntry.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        editEntry.setText("Edit Entry");
        editEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEntryActionPerformed(evt);
            }
        });
        Edit.add(editEntry);

        jMenuBar1.add(Edit);

        View.setText("View");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("View");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        View.add(jMenuItem1);

        jMenuBar1.add(View);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1152, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
            
            int table_row = jTable1.getSelectedRow();
            String selectedRowId = jTable1.getModel().getValueAt(table_row, 0).toString();
            jLabel1.setVisible(true);
            jLabel2.setVisible(true);
            jLabel2.setText(selectedRowId);
        

    }//GEN-LAST:event_jTable1MouseClicked

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        refresh();
        DefaultTableModel tablemodel =(DefaultTableModel) jTable1.getModel();
        tablemodel.setNumRows(0);
        try {

            String searchkey = searchKey.getText();
            Session session = new SessFactory().getSessionFactory().openSession();
            session.beginTransaction();
            Query query = session.createQuery("from AddEntry where itemName LIKE '"+searchkey+"%' ORDER BY date");
            List<AddEntry> entries = query.list();

            for (AddEntry e : entries) {
                
                tablemodel.addRow(new Object[]{
                    e.getId(),e.getItemName(), e.getItemCost(), e.getMoneySpendBy(), e.getDate(), e.getItemDesc()
                });

            }
            session.getTransaction().commit();
            session.close();

        }catch(Exception e){

            JOptionPane.showMessageDialog(this,"Error while loading table.");
            e.printStackTrace();
        }

    }//GEN-LAST:event_SearchButtonActionPerformed

    private void viewByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewByDateActionPerformed
       
        dateText.setVisible(true);
        searchDate.setVisible(true);
        monthNo.setVisible(false);
        searchMonth.setVisible(false);
        date1.setVisible(false);
        andLable.setVisible(false);
        date2.setVisible(false);
        searchBetweenDates.setVisible(false);
        
        
    }//GEN-LAST:event_viewByDateActionPerformed

    private void viewByMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewByMonthActionPerformed
        dateText.setVisible(false);
        searchDate.setVisible(false);
        monthNo.setVisible(true);
        searchMonth.setVisible(true);
        date1.setVisible(false);
        andLable.setVisible(false);
        date2.setVisible(false);
        searchBetweenDates.setVisible(false);
        
        
    }//GEN-LAST:event_viewByMonthActionPerformed

    private void viewBetweenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBetweenActionPerformed
        
        dateText.setVisible(false);
        searchDate.setVisible(false);
        monthNo.setVisible(false);
        searchMonth.setVisible(false);
        date1.setVisible(true);
        andLable.setVisible(true);
        date2.setVisible(true);
        searchBetweenDates.setVisible(true);
         
        
    }//GEN-LAST:event_viewBetweenActionPerformed

    private void searchDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDateActionPerformed
       
        refresh();
        String date = dateText.getText();
        
        DefaultTableModel tablemodel =(DefaultTableModel) jTable1.getModel();
        tablemodel.setNumRows(0);
        
        try{              
            Session session = new SessFactory().getSessionFactory().openSession();
            session.beginTransaction();
            Query query = session.createQuery("from AddEntry where date = '"+date+"' ORDER BY date");
            List<AddEntry> entries = query.list();
            for (AddEntry e : entries) {
                
                tablemodel.addRow(new Object[]{
                    e.getId(),e.getItemName(), e.getItemCost(), e.getMoneySpendBy(), e.getDate(), e.getItemDesc()
                });

            }
            session.getTransaction().commit();
            session.close();
            Double d = new SumOfMonth().getSumForView("select sum(itemCost) from AddEntry where date = '"+date+"'");
            String sum = d.toString();
            sumOfResult.setText(sum);
                     
        }catch(Exception e){
            
        JOptionPane.showMessageDialog(this,"Error while loading table.");
        e.printStackTrace();
        
        }  
        
        
    }//GEN-LAST:event_searchDateActionPerformed

    public void refresh(){
    
        sumOfResult.setText("");
        DefaultTableModel tablemodel =(DefaultTableModel) jTable1.getModel();
        tablemodel.setNumRows(0);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        dateText.hide();
        monthNo.hide();
        date1.hide();
        date2.hide();
        andLable.hide();
        searchDate.hide();
        searchBetweenDates.hide();
        searchMonth.hide();
        jLabel1.hide();
        jLabel2.hide();
    
    }
    
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        try {

            int table_row = jTable1.getSelectedRow();
            String selectedRowId = jTable1.getModel().getValueAt(table_row, 0).toString();
            
            Session session = new SessFactory().getSessionFactory().openSession();
            session.beginTransaction();
            Query query = session.createQuery("DELETE AddEntry where Id=" + selectedRowId);
            int i= query.executeUpdate();

            if(i>0){
                JOptionPane.showMessageDialog(this,"Deleted Successfully.");
            }
            else{
                JOptionPane.showMessageDialog(this,"Oops! Not Deleted!!");

            }

            session.getTransaction().commit();
            session.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        
        refresh();

    }//GEN-LAST:event_refreshButtonActionPerformed

    private void searchBetweenDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBetweenDatesActionPerformed
        refresh();
        String d1 = date1.getText();
        String d2 = date2.getText();
        DefaultTableModel tablemodel =(DefaultTableModel) jTable1.getModel();
        tablemodel.setNumRows(0);
        
        try{          
            Calendar calendar = Calendar.getInstance();
           
            int year = (calendar.get(Calendar.YEAR));
            Session session = new SessFactory().getSessionFactory().openSession();
            session.beginTransaction();
            Query query = session.createQuery("from AddEntry where date BETWEEN '"+d1+"' AND '"+d2+"' ORDER BY date");
            List<AddEntry> entries = query.list();
            for (AddEntry e : entries) {

                tablemodel.addRow(new Object[]{
                    e.getId(),e.getItemName(), e.getItemCost(), e.getMoneySpendBy(), e.getDate(), e.getItemDesc()
                });

            }
            session.getTransaction().commit();
            session.close();
            Double d = new SumOfMonth().getSumForView("select sum(itemCost) from AddEntry where date BETWEEN '"+d1+"' AND '"+d2+"'");
            String sum = d.toString();
            sumOfResult.setText(sum);
                     
        }catch(Exception e){
            
        JOptionPane.showMessageDialog(this,"Error while loading table.Check Entries");
        e.printStackTrace();
        
        }  

    }//GEN-LAST:event_searchBetweenDatesActionPerformed

    private void searchMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMonthActionPerformed
        refresh();
        String month = monthNo.getSelectedItem().toString();
        
        DefaultTableModel tablemodel =(DefaultTableModel) jTable1.getModel();
        tablemodel.setNumRows(0);
        
        try{          
            Calendar calendar = Calendar.getInstance();
           
            int year = (calendar.get(Calendar.YEAR));
            Session session = new SessFactory().getSessionFactory().openSession();
            session.beginTransaction();
            Query query = session.createQuery("from AddEntry where date BETWEEN '"+year+"-"+month+"-01' AND '"+year+"-"+month+"-31' ORDER BY date");
            List<AddEntry> entries = query.list();
            for (AddEntry e : entries) {

                tablemodel.addRow(new Object[]{
                    e.getId(),e.getItemName(), e.getItemCost(), e.getMoneySpendBy(), e.getDate(), e.getItemDesc()
                });

            }
            session.getTransaction().commit();
            session.close();
            Double d = new SumOfMonth().getSumForView("select sum(itemCost) from AddEntry where date BETWEEN '"+year+"-"+month+"-01' AND '"+year+"-"+month+"-31'");
            String sum = d.toString();
            sumOfResult.setText(sum);
            
                     
        }catch(Exception e){
            
        JOptionPane.showMessageDialog(this,"Error while loading table.Check Entries");
        e.printStackTrace();
        
        }  
        
    }//GEN-LAST:event_searchMonthActionPerformed

    private void newEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEntryActionPerformed

        this.dispose();
        NewEntry ne = new NewEntry();
        ne.setVisible(true);
    }//GEN-LAST:event_newEntryActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        this.dispose();
        HomePage  hm = new HomePage();
        hm.setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FileActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.dispose();
        ViewFrame v = new ViewFrame();
        v.setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void editEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEntryActionPerformed

        this.dispose();
        EditEntry ee = new EditEntry();
        ee.setVisible(true);
    }//GEN-LAST:event_editEntryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Edit;
    private javax.swing.JMenu File;
    private javax.swing.JLabel Label_View_Head;
    private javax.swing.JButton SearchButton;
    private javax.swing.JMenu View;
    private javax.swing.JLabel andLable;
    private javax.swing.JTextField date1;
    private javax.swing.JTextField date2;
    private javax.swing.JTextField dateText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JMenuItem editEntry;
    private javax.swing.JLabel headImage;
    private javax.swing.JMenuItem home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox monthNo;
    private javax.swing.JMenuItem newEntry;
    private javax.swing.JLabel newEntryHeader;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchBetweenDates;
    private javax.swing.JButton searchDate;
    private javax.swing.JTextField searchKey;
    private javax.swing.JButton searchMonth;
    private javax.swing.JLabel sumOfResult;
    private javax.swing.JRadioButton viewBetween;
    private javax.swing.ButtonGroup viewButtonGroup;
    private javax.swing.JRadioButton viewByDate;
    private javax.swing.JRadioButton viewByMonth;
    // End of variables declaration//GEN-END:variables
}
